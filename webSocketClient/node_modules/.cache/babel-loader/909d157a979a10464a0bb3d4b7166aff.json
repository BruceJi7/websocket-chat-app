{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\n\\\\Documents\\\\Tobias\\\\013-websocket-chat-app\\\\webSocketClient\\\\src\\\\index.js\";\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nimport Search from 'antd/lib/input/Search';\nconst {\n  search\n} = Input;\nconst client = new W3CWebSocket('ws://127.0.0.1:8000');\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: '',\n      isLoggedIn: false\n    };\n\n    this.onButtonClick = msg => {\n      client.send(JSON.stringify({\n        type: 'message',\n        msg: msg\n      }));\n    };\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('Received response from server: ', dataFromServer);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: this.state.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onButtonClick(\"Heelo\"),\n        children: \"SEND DAT MSG \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '200px 40px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          placeholder: \"Enter A Username\",\n          enterButton: \"Sign in\",\n          size: \"large\",\n          onSearch: value => this.setState({\n            isLoggedIn: true,\n            userName: value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/n/Documents/Tobias/013-websocket-chat-app/webSocketClient/src/index.js"],"names":["ReactDOM","React","Component","w3cwebsocket","W3CWebSocket","Card","Avatar","Input","Typography","Search","search","client","App","state","userName","isLoggedIn","onButtonClick","msg","send","JSON","stringify","type","componentDidMount","onopen","console","log","onmessage","message","dataFromServer","parse","data","render","padding","value","setState","document","getElementById"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,MAAhD;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,KAAnB;AAIA,MAAMI,MAAM,GAAG,IAAIP,YAAJ,CAAiB,qBAAjB,CAAf;AAEA,eAAe,MAAMQ,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAGvCW,KAHuC,GAG/B;AACJC,MAAAA,QAAQ,EAAC,EADL;AAEJC,MAAAA,UAAU,EAAC;AAFP,KAH+B;;AAAA,SAQvCC,aARuC,GAQtBC,GAAD,IAAS;AACrBN,MAAAA,MAAM,CAACO,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe;AACvBC,QAAAA,IAAI,EAAC,SADkB;AAEvBJ,QAAAA,GAAG,EAACA;AAFmB,OAAf,CAAZ;AAIH,KAbsC;AAAA;;AAevCK,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,MAAM,CAACY,MAAP,GAAgB,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,KAFD;;AAGAd,IAAAA,MAAM,CAACe,SAAP,GAAoBC,OAAD,IAAa;AAC5B,YAAMC,cAAc,GAAGT,IAAI,CAACU,KAAL,CAAWF,OAAO,CAACG,IAAnB,CAAvB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CG,cAA/C;AACH,KAHD;AAKH;;AAGDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAEK,KAAKlB,KAAL,CAAWE,UAAX,gBACD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKC,aAAL,CAAmB,OAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,gBAGD;AAAK,QAAA,KAAK,EAAE;AAACgB,UAAAA,OAAO,EAAC;AAAT,SAAZ;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,WAAW,EAAC,kBADhB;AAEI,UAAA,WAAW,EAAC,SAFhB;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACnB,YAAAA,UAAU,EAAE,IAAb;AAAmBD,YAAAA,QAAQ,EAACmB;AAA5B,WAAd;AAJvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AA9CsC;AAiD3CjC,QAAQ,CAAC+B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import ReactDOM from 'react-dom'\r\nimport React, { Component } from 'react'\r\n\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\"\r\n\r\nimport { Card, Avatar, Input, Typography } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport Search from 'antd/lib/input/Search'\r\n\r\nconst { search } = Input\r\n\r\n\r\n\r\nconst client = new W3CWebSocket('ws://127.0.0.1:8000')\r\n\r\nexport default class App extends Component {\r\n\r\n\r\n    state = {\r\n        userName:'',\r\n        isLoggedIn:false\r\n    }\r\n\r\n    onButtonClick = (msg) => {\r\n        client.send(JSON.stringify({\r\n            type:'message',\r\n            msg:msg\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        client.onopen = () => {\r\n            console.log('WebSocket Client Connected')\r\n        }\r\n        client.onmessage = (message) => {\r\n            const dataFromServer = JSON.parse(message.data)\r\n            console.log('Received response from server: ', dataFromServer)\r\n        }\r\n \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n\r\n                {this.state.isLoggedIn ? \r\n                <button onClick={() => this.onButtonClick(\"Heelo\")}>SEND DAT MSG </button>\r\n                :\r\n                <div style={{padding:'200px 40px'}}>\r\n                    <Search\r\n                        placeholder=\"Enter A Username\"\r\n                        enterButton=\"Sign in\"\r\n                        size=\"large\"\r\n                        onSearch={value => this.setState({isLoggedIn: true, userName:value })}\r\n                    />\r\n                </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n"]},"metadata":{},"sourceType":"module"}