{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\n\\\\Documents\\\\Tobias\\\\013-websocket-chat-app\\\\webSocketClient\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport React, { useState, useEffect } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Identicon from 'react-identicons';\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nimport \"./index.css\"; // import Search from 'antd/lib/input/Search'\n\nconst {\n  Search\n} = Input;\nconst {\n  Text\n} = Typography;\nconst {\n  Meta\n} = Card;\nconst client = new W3CWebSocket('ws://127.0.0.1:8000');\nexport default function App() {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [messageValue, setMessageValue] = useState('');\n  const [identicon, setIdenticon] = useState(null);\n\n  onLogIn = value => {\n    const UTCtime = () => {\n      const d = new Date();\n      return d.toUTCString();\n    };\n\n    console.log(UTCtime());\n\n    const identicon = /*#__PURE__*/_jsxDEV(Identicon, {\n      string: userName + UTCtime()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }, this);\n\n    setUserName(value);\n    setLoggedIn(true);\n    setIdenticon(identicon);\n  };\n\n  onButtonClick = msg => {\n    client.send(JSON.stringify({\n      type: 'message',\n      msg: msg,\n      user: userName\n    }));\n    setMessages('');\n  };\n\n  useEffect(() => {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('Received response from server: ', dataFromServer);\n\n      if (dataFromServer.type === \"message\") {\n        setMessages([...state.messages, {\n          msg: dataFromServer.msg,\n          user: dataFromServer.user\n        }]);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          type: \"secondary\",\n          style: {\n            fontSize: '36px'\n          },\n          children: \"Websocket Chat App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-block\",\n        children: messages.map(message => {\n          const cardUserClass = message.user === userName ? \"own-message\" : \"other-message\";\n          const avatarIcon = identicon ? identicon : message.user[0].toUpperCase() + message.user[1].toLowerCase();\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: 'message-card ' + cardUserClass,\n            children: /*#__PURE__*/_jsxDEV(Meta, {\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                className: \"avatar\",\n                children: avatarIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 46\n              }, this),\n              title: message.user,\n              description: message.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, message.msg, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          placeholder: \"Enter message\",\n          enterButton: \"Send\",\n          value: messageVal,\n          size: \"large\",\n          onChange: e => setMessageValue(e.target.value),\n          onSearch: value => onButtonClick(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '200px 40px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        placeholder: \"Enter A Username\",\n        enterButton: \"Sign in\",\n        size: \"large\",\n        onSearch: value => onLogIn(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Ut3gaEQqhWYuzOx2KMRetevUW4k=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 136,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/n/Documents/Tobias/013-websocket-chat-app/webSocketClient/src/index.js"],"names":["ReactDOM","React","useState","useEffect","w3cwebsocket","W3CWebSocket","Identicon","Card","Avatar","Input","Typography","Search","Text","Meta","client","App","userName","setUserName","isLoggedIn","setLoggedIn","messages","setMessages","messageValue","setMessageValue","identicon","setIdenticon","onLogIn","value","UTCtime","d","Date","toUTCString","console","log","onButtonClick","msg","send","JSON","stringify","type","user","onopen","onmessage","message","dataFromServer","parse","data","state","fontSize","map","cardUserClass","avatarIcon","toUpperCase","toLowerCase","messageVal","e","target","padding","render","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\"\r\n\r\nimport Identicon from 'react-identicons'\r\n\r\nimport { Card, Avatar, Input, Typography } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./index.css\"\r\n// import Search from 'antd/lib/input/Search'\r\n\r\nconst { Search } = Input\r\nconst { Text } = Typography\r\nconst { Meta } = Card\r\n\r\n\r\n\r\nconst client = new W3CWebSocket('ws://127.0.0.1:8000')\r\n\r\nexport default function App() {\r\n\r\n\r\n    const [ userName, setUserName ] = useState('')\r\n    const [ isLoggedIn, setLoggedIn] = useState(false)\r\n    const [ messages, setMessages ] = useState([])\r\n    const [ messageValue, setMessageValue ] = useState('')\r\n    const [identicon, setIdenticon ] = useState(null)\r\n\r\n    onLogIn = (value) => {\r\n        const UTCtime = () => {\r\n            const d = new Date()\r\n            return d.toUTCString()\r\n        }\r\n        console.log(UTCtime())\r\n\r\n        const identicon = <Identicon string={userName+UTCtime()}/>\r\n        setUserName(value)\r\n        setLoggedIn(true)\r\n        setIdenticon(identicon)\r\n    }\r\n\r\n    onButtonClick = (msg) => {\r\n        client.send(JSON.stringify({\r\n            type:'message',\r\n            msg:msg,\r\n            user: userName\r\n        }))\r\n        setMessages('')\r\n    }\r\n\r\n    useEffect(() =>{\r\n\r\n        client.onopen = () => {\r\n            console.log('WebSocket Client Connected')\r\n        }\r\n\r\n        client.onmessage = (message) => {\r\n\r\n            const dataFromServer = JSON.parse(message.data)\r\n\r\n            console.log('Received response from server: ', dataFromServer)\r\n            if (dataFromServer.type === \"message\") {\r\n                setMessages(\r\n                                [...state.messages,\r\n                                    {\r\n                                        msg: dataFromServer.msg,\r\n                                        user: dataFromServer.user\r\n                                     }\r\n                                ]\r\n                            )\r\n                }\r\n\r\n            }\r\n \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n\r\n            {isLoggedIn ?\r\n            <div>\r\n                {/* <button onClick={() => this.onButtonClick(\"Heelo\")}>SEND DAT MSG </button>\r\n                \r\n                {this.state.messages.map(msg => <div><p>User {msg.user} says:</p><p>{msg.msg}</p></div>)} */}\r\n\r\n                <div className=\"title\">\r\n                    <Text type=\"secondary\" style={{fontSize: '36px'}}>Websocket Chat App</Text>\r\n                </div>\r\n                <div className=\"message-block\">\r\n                    {messages.map(message => {\r\n\r\n\r\n                        const cardUserClass = message.user === userName ? \"own-message\" : \"other-message\"\r\n                        const avatarIcon = identicon ? identicon : message.user[0].toUpperCase()+message.user[1].toLowerCase()  \r\n                        return (  \r\n                            <Card key={message.msg} className={'message-card ' + cardUserClass}>\r\n                                <Meta\r\n                                \r\n                                    avatar={ <Avatar className=\"avatar\">{avatarIcon}</Avatar> }\r\n                                    title={message.user}\r\n                                    description={message.msg}\r\n\r\n                                />\r\n                            </Card>\r\n                        )}\r\n                        )}\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <Search\r\n                        placeholder=\"Enter message\"\r\n                        enterButton=\"Send\"\r\n                        value={messageVal}\r\n                        size=\"large\"\r\n                        onChange={(e)=> setMessageValue(e.target.value)}\r\n                        onSearch={value=> onButtonClick(value)}\r\n                    />\r\n                </div>\r\n\r\n            </div> \r\n            :\r\n            <div style={{padding:'200px 40px'}}>\r\n                <Search\r\n                    placeholder=\"Enter A Username\"\r\n                    enterButton=\"Sign in\"\r\n                    size=\"large\"\r\n                    onSearch={value => onLogIn(value)}\r\n                />\r\n            </div>\r\n            }\r\n            \r\n        </div>\r\n        )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n"]},"metadata":{},"sourceType":"module"}