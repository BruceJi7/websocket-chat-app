{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\n\\\\Documents\\\\Tobias\\\\013-websocket-chat-app\\\\webSocketClient\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport React, { useState, useEffect } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Identicon from 'react-identicons';\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nimport \"./index.css\"; // import Search from 'antd/lib/input/Search'\n\nconst {\n  Search\n} = Input;\nconst {\n  Text\n} = Typography;\nconst {\n  Meta\n} = Card;\nconst client = new W3CWebSocket('ws://127.0.0.1:8000');\nexport default function App() {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [messageValue, setMessageValue] = useState('');\n  const [identicon, setIdenticon] = useState(null);\n\n  function onLogIn(value) {\n    const UTCtime = () => {\n      const d = new Date();\n      return d.toUTCString();\n    };\n\n    console.log(UTCtime());\n\n    const identicon = /*#__PURE__*/_jsxDEV(Identicon, {\n      string: userName + UTCtime()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }, this);\n\n    setUserName(value);\n    setLoggedIn(true);\n    setIdenticon(identicon);\n  }\n\n  function onButtonClick(msg) {\n    client.send(JSON.stringify({\n      type: 'message',\n      msg: msg,\n      user: userName\n    }));\n    setMessages('');\n  }\n\n  useEffect(() => {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('Received response from server: ', dataFromServer);\n\n      if (dataFromServer.type === \"message\") {\n        const currentMessages = messages;\n        console.log('Received message: ', currentMessages);\n        setMessages([...currentMessages, {\n          msg: dataFromServer.msg,\n          user: dataFromServer.user\n        }]);\n      }\n    };\n  }, []);\n  let mainContent = null;\n\n  let enterMessageBox = /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bottom\",\n    children: /*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Enter message\",\n      enterButton: \"Send\",\n      value: messageValue,\n      size: \"large\",\n      onChange: e => setMessageValue(e.target.value),\n      onSearch: value => onButtonClick(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n\n  if (isLoggedIn) {\n    if (messages.length > 0) {\n      mainContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            type: \"secondary\",\n            style: {\n              fontSize: '36px'\n            },\n            children: \"Websocket Chat App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: messages.map(message => {\n            const cardUserClass = message.user === userName ? \"own-message\" : \"other-message\";\n            const avatarIcon = identicon ? identicon : message.user[0].toUpperCase() + message.user[1].toLowerCase();\n            return /*#__PURE__*/_jsxDEV(Card, {\n              className: 'message-card ' + cardUserClass,\n              children: /*#__PURE__*/_jsxDEV(Meta, {\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: \"avatar\",\n                  children: avatarIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 50\n                }, this),\n                title: message.user,\n                description: message.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)\n            }, message.msg, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), enterMessageBox]\n      }, void 0, true);\n    } else {\n      // USER LOGGED IN, NO MESSAGES\n      mainContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          style: {\n            marginTop: 100\n          },\n          children: \"Start a conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), enterMessageBox]\n      }, void 0, true);\n    }\n  } else {\n    // USER NOT LOGGED IN\n    mainContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '200px 40px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        placeholder: \"Enter A Username\",\n        enterButton: \"Sign in\",\n        size: \"large\",\n        onSearch: value => onLogIn(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: mainContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"m935Ks7VBexnZQhqK+WCvrBVH4Q=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 170,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/n/Documents/Tobias/013-websocket-chat-app/webSocketClient/src/index.js"],"names":["ReactDOM","React","useState","useEffect","w3cwebsocket","W3CWebSocket","Identicon","Card","Avatar","Input","Typography","Search","Text","Meta","client","App","userName","setUserName","isLoggedIn","setLoggedIn","messages","setMessages","messageValue","setMessageValue","identicon","setIdenticon","onLogIn","value","UTCtime","d","Date","toUTCString","console","log","onButtonClick","msg","send","JSON","stringify","type","user","onopen","onmessage","message","dataFromServer","parse","data","currentMessages","mainContent","enterMessageBox","e","target","length","fontSize","map","cardUserClass","avatarIcon","toUpperCase","toLowerCase","marginTop","padding","render","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\"\r\n\r\nimport Identicon from 'react-identicons'\r\n\r\nimport { Card, Avatar, Input, Typography } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./index.css\"\r\n// import Search from 'antd/lib/input/Search'\r\n\r\nconst { Search } = Input\r\nconst { Text } = Typography\r\nconst { Meta } = Card\r\n\r\n\r\n\r\nconst client = new W3CWebSocket('ws://127.0.0.1:8000')\r\n\r\nexport default function App() {\r\n\r\n\r\n    const [ userName,       setUserName     ] = useState('')\r\n    const [ isLoggedIn,     setLoggedIn     ] = useState(false)\r\n    const [ messages,       setMessages     ] = useState([])\r\n    const [ messageValue,   setMessageValue ] = useState('')\r\n    const [ identicon,      setIdenticon    ] = useState(null)\r\n\r\n    function onLogIn (value) {\r\n        const UTCtime = () => {\r\n            const d = new Date()\r\n            return d.toUTCString()\r\n        }\r\n        console.log(UTCtime())\r\n\r\n        const identicon = <Identicon string={userName+UTCtime()}/>\r\n        setUserName(value)\r\n        setLoggedIn(true)\r\n        setIdenticon(identicon)\r\n    }\r\n\r\n    function onButtonClick (msg) {\r\n        client.send(JSON.stringify({\r\n            type:'message',\r\n            msg:msg,\r\n            user: userName\r\n        }))\r\n        setMessages('')\r\n    }\r\n\r\n    useEffect(() =>{\r\n\r\n        client.onopen = () => {\r\n            console.log('WebSocket Client Connected')\r\n        }\r\n\r\n        client.onmessage = (message) => {\r\n\r\n            const dataFromServer = JSON.parse(message.data)\r\n\r\n            console.log('Received response from server: ', dataFromServer)\r\n            if (dataFromServer.type === \"message\") {\r\n                const currentMessages = messages\r\n                console.log('Received message: ', currentMessages)\r\n                setMessages(\r\n                                [...currentMessages,\r\n                                    {\r\n                                        msg: dataFromServer.msg,\r\n                                        user: dataFromServer.user\r\n                                     }\r\n                                ]\r\n                            )\r\n                }\r\n\r\n            }\r\n \r\n    }, [])\r\n\r\n    let mainContent = null\r\n\r\n    let enterMessageBox = \r\n        <section className=\"bottom\">\r\n            <Search\r\n                placeholder=\"Enter message\"\r\n                enterButton=\"Send\"\r\n                value={messageValue}\r\n                size=\"large\"\r\n                onChange={(e)=> setMessageValue(e.target.value)}\r\n                onSearch={value=> onButtonClick(value)}\r\n            />\r\n        </section>\r\n\r\n    if (isLoggedIn) {\r\n\r\n        if (messages.length > 0) {\r\n           \r\n            mainContent = \r\n            \r\n                <>\r\n                        \r\n                    <div className=\"title\">\r\n\r\n                        <Text type=\"secondary\" style={{fontSize: '36px'}}>Websocket Chat App</Text>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"message-block\">\r\n\r\n    \r\n                        {messages.map(message => {\r\n\r\n\r\n                            const cardUserClass = message.user === userName ? \"own-message\" : \"other-message\"\r\n                            const avatarIcon = identicon ? identicon : message.user[0].toUpperCase()+message.user[1].toLowerCase()\r\n\r\n                            return (  \r\n                                <Card key={message.msg} className={'message-card ' + cardUserClass}>\r\n                                    <Meta\r\n                                    \r\n                                        avatar={ <Avatar className=\"avatar\">{avatarIcon}</Avatar> }\r\n                                        title={message.user}\r\n                                        description={message.msg}\r\n\r\n                                    />\r\n                                </Card>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                   {enterMessageBox} \r\n            \r\n                </>\r\n\r\n        } else { // USER LOGGED IN, NO MESSAGES\r\n\r\n            mainContent = \r\n                <>\r\n                    <section style={{marginTop:100}}>Start a conversation!</section>\r\n                    {enterMessageBox}\r\n                </>\r\n            \r\n\r\n        }\r\n\r\n    } else { // USER NOT LOGGED IN\r\n\r\n        mainContent = \r\n            <div style={{padding:'200px 40px'}}>\r\n                    <Search\r\n                        placeholder=\"Enter A Username\"\r\n                        enterButton=\"Sign in\"\r\n                        size=\"large\"\r\n                        onSearch={value => onLogIn(value)}\r\n                    />\r\n            </div>\r\n        \r\n\r\n    \r\n    }\r\n\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            {mainContent}\r\n        </main>\r\n        )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n"]},"metadata":{},"sourceType":"module"}